{"wrkspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">my variable</variable><variable type=\"\" id=\"5I5D1F5#B8@.Du]|MeY@\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">index</variable><variable type=\"broadcast_msg\" id=\"NkyoIgkrCd[4MPCXa)f+\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable><variable type=\"broadcast_msg\" id=\"H]$iHz2-CFR[C9n/+`fM\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">FORWARD</variable><variable type=\"broadcast_msg\" id=\"8^:`sj5_zRak_gS3nAf9\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">BACKWARD</variable><variable type=\"broadcast_msg\" id=\"CYK1nqPLC}2_i:9v^-d:\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">LEFT</variable><variable type=\"broadcast_msg\" id=\"ePbXNC!?9-k5VcjOG0#E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">RIGHT</variable><variable type=\"broadcast_msg\" id=\"nK-s7nQG$Be^61]+.emg\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">STRAIGHT_AND_LEFT</variable><variable type=\"boolean\" id=\"xRmBHJvg*e)tKb!AVR`@\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">DEBUG</variable></variables><block type=\"v5_events_when_broadcasted\" id=\"enYp/tAz5rpH#oPeg,rH\" x=\"650\" y=\"-530\"><field name=\"BROADCAST_OPTION\" id=\"nK-s7nQG$Be^61]+.emg\" variabletype=\"broadcast_msg\">STRAIGHT_AND_LEFT</field><next><block type=\"v5_control_if_then_else\" id=\"/bjhh=kG6Z8MY@rCX**!\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"H?U8*cp^dDE(Tqs5%^93\"><field name=\"VARIABLE\" id=\"xRmBHJvg*e)tKb!AVR`@\" variabletype=\"boolean\">DEBUG</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_next_row\" id=\"~PbfK|w$6*(F}r~^*L_{\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\".juf4VDiN?EeMT$}Psa!\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"[2_I+0KQ!8!9[G1#~FS8\"><field name=\"TEXT\">FORWARD AND LEFT</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_motion_spin_for\" id=\"r9|Wqhu~fg-01.p*usy1\"><field name=\"MOTOR\">Motor1</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"C[+GX?U]).q8ZOX_7:eX\"><field name=\"NUM\">320</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"Y(fcvfD$[:vnqRK#obt3\"><field name=\"MOTOR\">Motor1</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"FT;CoQqw^QF@}0tKJ9}E\"><field name=\"NUM\">200</field></shadow></value></block></next></block></statement></block></next></block><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"90\" y=\"-490\"><next><block type=\"v5_variables_set_boolean_variable\" id=\"Siw,:In!V%`S#[c?23f~\"><field name=\"VARIABLE\" id=\"xRmBHJvg*e)tKb!AVR`@\" variabletype=\"boolean\">DEBUG</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"5I;`K_YI,9W9Ss1+1FWy\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"v5_variables_set_variable\" id=\"A9y5tU)uPp+=PLl1yxJF\"><field name=\"VARIABLE\" id=\"5I5D1F5#B8@.Du]|MeY@\" variabletype=\"\">index</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"9@m9susC3@F$IA2DK(Me\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_control_forever\" id=\"M,@$%~A:vgxNpqi@y|XB\"><statement name=\"SUBSTACK\"><block type=\"v5_events_broadcast_and_wait\" id=\"V6Jhzb#q~r?P*3+4PO?M\"><value name=\"BROADCAST_INPUT\"><shadow type=\"event_broadcast_menu\" id=\"IC!UQQLX@W6VA12H?}h5\"><field name=\"BROADCAST_OPTION\" id=\"nK-s7nQG$Be^61]+.emg\" variabletype=\"broadcast_msg\">STRAIGHT_AND_LEFT</field></shadow></value><next><block type=\"v5_looks_clear_row\" id=\"p96W$kj?Q=I6K2,5U?S:\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"@g31|=?~=eX;$2vDEFI]\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_set_cursor\" id=\"FxAz,7~@3M!poI8TcLeV\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"yaXo?m|!`uXWlZ_RIm,S\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"/I7}q$f)i5`qBo7r3@34\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"$A))!i7:%C+e.T8PM;0}\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"oG7-6CF.iP#Hl#Ny.*Qf\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_variables_variable\" id=\"5js,brDwZ~GA4LyGla1L\"><field name=\"VARIABLE\" id=\"5I5D1F5#B8@.Du]|MeY@\" variabletype=\"\">index</field></block></value><next><block type=\"v5_variables_set_variable\" id=\"a4Y7_h:-+0?4SEb9S,ah\"><field name=\"VARIABLE\" id=\"5I5D1F5#B8@.Du]|MeY@\" variabletype=\"\">index</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"}jgyB^KH:a%B^37As$_d\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_add\" id=\"ThOEdPJdBu%VsCnJb3GZ\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"|.,GvE^+XINe!-+;]LBi\"><field name=\"NUM\"></field></shadow><block type=\"v5_variables_variable\" id=\"!Vz{Bi9}dFezoobK7ysu\"><field name=\"VARIABLE\" id=\"5I5D1F5#B8@.Du]|MeY@\" variabletype=\"\">index</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"j1oNLxerCKjx8zIYLnke\"><field name=\"NUM\">1</field></shadow></value></block></value></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block><block type=\"v5_events_when_broadcasted\" id=\"FitG_j$kzYf}T3v!@:~u\" x=\"650\" y=\"-110\"><field name=\"BROADCAST_OPTION\" id=\"nK-s7nQG$Be^61]+.emg\" variabletype=\"broadcast_msg\">STRAIGHT_AND_LEFT</field><next><block type=\"v5_control_if_then_else\" id=\"[pXM[b@*!R3L8fOJyCf9\"><value name=\"CONDITION\"><block type=\"v5_variables_boolean_variable\" id=\"IvGZH!fA$W~s.qT;]:6A\"><field name=\"VARIABLE\" id=\"xRmBHJvg*e)tKb!AVR`@\" variabletype=\"boolean\">DEBUG</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_next_row\" id=\"PJ)+#}lR4uCJWEk~8Ox.\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"o6MB[65H4ze2_t#~I;$D\"><field name=\"TARGET\">Brain</field><value name=\"DATA\"><shadow type=\"text\" id=\"C^!fLpaT-zk{|z0;[5wC\"><field name=\"TEXT\">FORWARD AND LEFT 2</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_motion_spin_for\" id=\"h6:)@;8+[DGr#`Dk-X@Q\"><field name=\"MOTOR\">Motor2</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"Jxfkt*;^`oX#.s2^rdx!\"><field name=\"NUM\">320</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"`^tA3SY?QZxhl~:/z/h{\"><field name=\"MOTOR\">Motor2</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"fZef}-?yO,b/W[4aJ{|2\"><field name=\"NUM\">200</field></shadow></value></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[1],"name":"Motor1","customName":false,"deviceType":"Motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[2],"name":"Motor2","customName":false,"deviceType":"Motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"}}],"slot":0,"cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"v5.h\"\n#include \"v5_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n// Robot configuration code.\nmotor Motor1 = motor(vex::PORT1, vex::gearSetting::ratio18_1, false);\n\nmotor Motor2 = motor(vex::PORT2, vex::gearSetting::ratio18_1, true);\n\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\nint Brain_precision;\n\n\n// Generated code.\n\nfloat my_variable, index2;\n\nbool DEBUG;\n\nvex::event message1 = vex::event();\nvex::event FORWARD = vex::event();\nvex::event BACKWARD = vex::event();\nvex::event LEFT = vex::event();\nvex::event RIGHT = vex::event();\nvex::event STRAIGHT_AND_LEFT = vex::event();\n\nvoid onevent_STRAIGHT_AND_LEFT_0() {\n  if (DEBUG) {\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"FORWARD AND LEFT\");\n  } else {\n    Motor1.rotateFor(320.0, vex::rotationUnits::deg, true);\n    Motor1.rotateFor(200.0 * -1, vex::rotationUnits::deg, true);\n  }\n}\n\nconst char* printToBrain_numberFormat() {\n  switch(Brain_precision){\n  case 0:  return \"%.0f\";\n  case 1:  return \"%.1f\";\n  case 2:  return \"%.2f\";\n  case 3:  return \"%.3f\";\n  case -1: return \"%f\";\n  default: return \"%f\";\n  }\n}\n\nint whenStarted1() {\n  DEBUG = false;\n  index2 = 0.0;\n  while (true) {\n    STRAIGHT_AND_LEFT.broadcastAndWait();\n    Brain.Screen.clearLine(1, vex::color::black);\n    Brain.Screen.setCursor(Brain.Screen.row(), 1);\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(index2));\n    index2 = index2 + 1.0;\n  task::sleep(5);\n  }\nreturn 0;\n}\n\nvoid onevent_STRAIGHT_AND_LEFT_1() {\n  if (DEBUG) {\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"FORWARD AND LEFT 2\");\n  } else {\n    Motor2.rotateFor(320.0, vex::rotationUnits::deg, true);\n    Motor2.rotateFor(200.0, vex::rotationUnits::deg, true);\n  }\n}\n\n\nint main() {\n\n\n  srand(vex::timer::system());\n\n\n\n  // pre event registration\n  // register event handlers\n  STRAIGHT_AND_LEFT(onevent_STRAIGHT_AND_LEFT_0);\n  STRAIGHT_AND_LEFT(onevent_STRAIGHT_AND_LEFT_1);\n\n  task::sleep(15);\n  // post event registration\n\n  // when started blocks...\n\n  whenStarted1();\n  return 0;\n}","cppStatus":"true","platform":"V5","sdkVersion":"20190805.09.00.00","appVersion":"1.0.1-344","fileFormat":"0.1.1","icon":""}